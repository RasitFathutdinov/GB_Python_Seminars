# **************************************
# Задание 4. Напишите программу, которая по заданному номеру четверти, 
# показывает диапазон возможных координат точек в этой четверти (x и y).
# **************************************
# Решение

# ********* Определение функций ********* 
# Функция № 1 - Ввод номера четверти 
def Input_field_number():
    print("")
    i = 0
    # Цикл использован для проверки корректного ввода целого числа через системные исключения
    while i < 1:
        try:
            # если введено не число (или вещественное), 
            # то интерпрититор выдаст исключение при преобразовании строки
            field_number = input("Введите номер четверти (т.е. число от 1 до 4): ")
            if ('.' in field_number):
                print("\t! была попытка ввода вещественного числа !")
                float('-')
            field_number = int(field_number)
            i += 1  # если сработает исключение, то приращения счётчика не будет!
                    # и придётся заново повторять ввод данных
        except:
            print("\t! Некорректный ввод для целочисленного типа данных. Повторите ввод !")
    # Если вне диапазона от 1 и 4, то рекурсивный вызов ввода
    if (field_number < 0 or field_number > 4):
        print("Некорректно ввели номер четверти.\n В двухмерной декартовой системе координат нумерация от 1 до 4")
        return Input_field_number()
    else:
        return field_number

# Функция № 2 - Поиск допустимого диапазона координат по осям Ох и Оу по номеру четверти  
def Search_of_quarter_range(field_number):
    if field_number == 1:
        print("Допустимый диапазон I четверти: х > 0 и у > 0\n")
    elif field_number == 2:
        print("Допустимый диапазон  II четверти: х < 0 и у > 0\n")
    elif field_number == 3:
        print("Допустимый диапазон  III четверти: х < 0 и у < 0\n")
    elif field_number == 4:  # проверку на == 4 можно не делать, так как диапазон проверяю при вводе
        print("Допустимый диапазон  IV четверти: х > 0 и у < 0\n")
    else:                    # но для массовости данного метода - нужно
        print(f"Было введно число {field_number}, а такой четверти нет!\n")

# ********* основной код - функция main  ********* 
# вызов функции "1"
number_of_field = Input_field_number()
# вызов функции "2"
Search_of_quarter_range(number_of_field)
# **************************************
# Задание 3. Напишите программу, которая принимает на вход координаты точки (X и Y), 
# причём X ≠ 0 и Y ≠ 0 и выдаёт номер четверти плоскости, 
# в которой находится эта точка (или на какой оси она находится).
# **************************************
# Пример:
# - x=34; y=-30 -> 4
# - x=2; y=4-> 1
# - x=-34; y=-30 -> 3

# Решение

# ********* Определение функций ********* 
# Функция № 1 - Ввод координат точки 
def Input_coord_of_point():
    point = [1, 2]
    print("")
    i = 0
    while i < 2:
        try:
            # если введено не чило (вещественное), то интерпрититор выдаст исключение при приобразовании строки
            point[i] = float(input(f"Введите координату # {i+1} (1 - ось Оx, 2 - ось Оy и т.д.): "))
            i += 1  # если сработает исключение, то приращения счётчика не будет!
                    # и придётся заново повторять ввод данных
        except:
            print("\t! Введено не число. Повторите ввод !")
    return point
# Функция № 2 - Поиск принадлежности точки к четверти координат  
def Search_of_quarter(point_xy):
    if (point_xy[0] > 0 and point_xy[1] > 0):
        return "Точка {} находится в I четверти\n".format(point_xy) # 1я
    elif (point_xy[0] < 0 and point_xy[1] > 0):
        return "Точка {} находится в II четверти\n".format(point_xy) # 2я
    elif (point_xy[1] < 0 and point_xy[0] < 0):
        return "Точка {} находится в III четверти\n".format(point_xy)  # 3я
    else:
        return "Точка {} находится в IV четверт\n".format(point_xy)  # 4я
# ********* основной код - функция main  ********* 
# вызов функции "1"
point_xy = Input_coord_of_point()
# проверка на оси и ввод заново
while (point_xy[0] == 0 or point_xy[1] == 0):
    print("Точка находится на оси, введите заново")
    arr_xy = Input_coord_of_point()
# вызов функции "2"
print(Search_of_quarter(point_xy))